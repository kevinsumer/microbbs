plugins {
    id 'com.moowork.node' version '0.13'
}

apply plugin: 'spring-boot'
apply plugin: 'com.moowork.node'

node {
    version = '7.0.0'
    download = false
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-redis')
	compile('org.springframework.boot:spring-boot-starter-data-solr')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.security.oauth:spring-security-oauth2')

	compile('org.projectlombok:lombok')
	// session json redis
	compile('org.springframework.session:spring-session')
	compile('org.springframework.session:spring-session-data-redis')

	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile 'com.github.mxab.thymeleaf.extras:thymeleaf-extras-data-attribute'
	compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity4'
	// nekohtml is required for thymeleaf's LEGACYHTML5 mode
	runtime 'net.sourceforge.nekohtml:nekohtml'

	compile 'org.apache.tomcat:tomcat-jdbc'
	compile 'org.hibernate:hibernate-validator'
	compile 'com.zaxxer:HikariCP'
	compile 'com.fasterxml.jackson.core:jackson-annotations'
	compile('com.fasterxml.jackson.core:jackson-core')
	compile('com.fasterxml.jackson.core:jackson-databind')
	runtime('mysql:mysql-connector-java')

	testCompile('org.springframework.boot:spring-boot-starter-test')
}

task npmBuild(dependsOn: npmInstall, type: NpmTask) {
	inputs.file 'gulpfile.js'
	args = ['run', 'build']
}

//jar.dependsOn npmBuild